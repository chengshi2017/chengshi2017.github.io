<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sunny</title>
  
  <subtitle>个人博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-01-11T12:34:15.879Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Sunny</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>spring boot 配置热部署</title>
    <link href="http://yoursite.com/2018/01/11/spring%20boot%E9%85%8D%E7%BD%AE%E7%83%AD%E9%83%A8%E7%BD%B2/"/>
    <id>http://yoursite.com/2018/01/11/spring boot配置热部署/</id>
    <published>2018-01-11T11:01:00.388Z</published>
    <updated>2018-01-11T12:34:15.879Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是热部署？"><a href="#什么是热部署？" class="headerlink" title="什么是热部署？"></a>什么是热部署？</h3><p>热部署，就是在应用正在运行的时候升级软件，却不需要重新启动应用。<br>在开发过程中，热部署对我们的开发速度有很大的帮助。例如在我们修改Bug的时候对Jsp或者Java类进行了修改在不重新启动WEB服务器就能让修改生效,<em>配置文件除外</em>。</p><a id="more"></a><h3 id="怎么样进行热部署"><a href="#怎么样进行热部署" class="headerlink" title="怎么样进行热部署"></a>怎么样进行热部署</h3><h4 id="如何在idea中设置Tomcat热部署"><a href="#如何在idea中设置Tomcat热部署" class="headerlink" title="如何在idea中设置Tomcat热部署"></a>如何在idea中设置Tomcat热部署</h4><ol><li>首先打开idea，点击右上角的下拉框，选中Edit Configurations,如下图：</li></ol><p><img src="http://p25wdbssm.bkt.clouddn.com/1.png" alt=""></p><ol><li>点击对话框左上角的加号，选择Tomcat Server，再选择Local子菜单</li></ol><p><img src="http://p25wdbssm.bkt.clouddn.com/2.png" alt=""></p><ol><li>选择Deployment选项卡，对需要部署的项目文件做设置，点击加号选择Artifact，然后选择war exploded方式，这种方式是以文件夹方式部署的，而war是以war包的方式，exploded方式支持热部署，注意一定要选择exploded方式，否则无法实现热部署。</li></ol><p><img src="http://p25wdbssm.bkt.clouddn.com/3.png" alt=""></p><ol><li>然后回到Server选项卡，设置On Update action和On frame detectivation选项，都设置为Update classes and resources，表示classes文件和资源文件都更新</li></ol><p><img src="http://p25wdbssm.bkt.clouddn.com/4.png" alt=""></p><ol><li>如果只设置On Update action选项，则需要每次自己手动点击更新，设置了On frame detectivation，会监测窗口，idea窗口发生切换则自动更新文件</li></ol><p><strong>在运行模式下，Java文件更新不会立即生效，可以选择debug模式运行。</strong></p><h4 id="spring-boot热部署配置"><a href="#spring-boot热部署配置" class="headerlink" title="spring boot热部署配置"></a>spring boot热部署配置</h4><p>spring boot致力于快速应用开发领域，内置了很多的组件，让我们摆脱了spring MVC下冗余的配置，使我们的开发变得更加的便捷快速。<br>spring boot在自动嵌入了Tomcat，无需部署war文件，便可使项目快速运行起来，因此spring boot的热部署也与Tomcat的热部署不一样。<br>spring boot的热部署是使用devtools模块。devtools模块，是为开发者服务的一个模块。主要的功能就是代码修改后一般在5秒之内就会自动重新加载至服务器，相当于restart成功。</p><p><strong>原理分析</strong></p><p>在发现代码有更改之后，自动重新启动应用，但是其速度比手动停止后再启动还要快些，更快这里指的不是节省出来的手工操作的时间。</p><ul><li>一个Base ClassLoader加载器，用于加载不会改变的第三方依赖的jar；</li><li>另一个Restart ClassLoader加载器，用于加载自己编写的类；</li><li>执行流程：当应用重启后，原先的Restart ClassLoader被丢掉、重新new一个Restart ClassLoader来加载这些修改过的东西，而Base ClassLoader却没有变化。这就是devtools重启速度快的原因。</li></ul><p><strong>如何实现热部署</strong></p><ol><li>修改项目的pom.xml文件</li></ol><p>在依赖中加入:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.5.7.RELEASE&lt;/version&gt;</span><br><span class="line">    &lt;optional&gt;true&lt;/optional&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><p><img src="http://p25wdbssm.bkt.clouddn.com/5.png" alt=""></p><p>在构建中加入:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;plugin&gt;</span><br><span class="line">   &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">   &lt;configuration&gt;</span><br><span class="line">      &lt;fork&gt;true&lt;/fork&gt;</span><br><span class="line">      &lt;addResources&gt;true&lt;/addResources&gt;</span><br><span class="line">   &lt;/configuration&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure></p><p><img src="http://p25wdbssm.bkt.clouddn.com/6.png" alt=""></p><ol><li>修改设置</li></ol><p>在idea中，还需要到设置里将project automatically勾选上；File-&gt;Setting，然后搜索“compiler”  将右侧project automatically勾上。</p><p><img src="http://p25wdbssm.bkt.clouddn.com/7.png" alt=""></p><ol><li>修改IDE配置</li></ol><p>使用ctrl+shift+a 快捷键搜索Registry，选择选择搜索出来的第一个，进入后找到“compiler.automake.allow.when.app.running”，勾上开启此功能即可。</p><p><img src="http://p25wdbssm.bkt.clouddn.com/8.png" alt=""></p><ol><li>应用热部署</li></ol><p>重新启动项目即可实现热部署，改动任意代码会立即生效，不用再每次重新启动项目</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是热部署？&quot;&gt;&lt;a href=&quot;#什么是热部署？&quot; class=&quot;headerlink&quot; title=&quot;什么是热部署？&quot;&gt;&lt;/a&gt;什么是热部署？&lt;/h3&gt;&lt;p&gt;热部署，就是在应用正在运行的时候升级软件，却不需要重新启动应用。&lt;br&gt;在开发过程中，热部署对我们的开发速度有很大的帮助。例如在我们修改Bug的时候对Jsp或者Java类进行了修改在不重新启动WEB服务器就能让修改生效,&lt;em&gt;配置文件除外&lt;/em&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="spring boot" scheme="http://yoursite.com/categories/spring-boot/"/>
    
    
      <category term="后端" scheme="http://yoursite.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>spring boot的配置文件application.properties详解</title>
    <link href="http://yoursite.com/2018/01/11/spring%20boot%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6application.properties%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/01/11/spring boot的配置文件application.properties详解/</id>
    <published>2018-01-11T02:40:33.086Z</published>
    <updated>2018-01-11T02:45:08.261Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># ===================================================================  </span><br><span class="line"># COMMON SPRING BOOT PROPERTIES  </span><br><span class="line">#  </span><br><span class="line"># This sample file is provided as a guideline. Do NOT copy it in its  </span><br><span class="line"># entirety to your own application.               ^^^  </span><br><span class="line"># ===================================================================  </span><br><span class="line">  </span><br><span class="line"># ----------------------------------------  </span><br><span class="line"># CORE PROPERTIES  </span><br><span class="line"># ----------------------------------------  </span><br><span class="line">  </span><br><span class="line"># SPRING CONFIG (ConfigFileApplicationListener)  </span><br><span class="line">spring.config.name= # config file name (default to &apos;application&apos;)  </span><br><span class="line">spring.config.location= # location of config file  </span><br><span class="line">  </span><br><span class="line"># PROFILES  </span><br><span class="line">spring.profiles= # comma list of active profiles  </span><br><span class="line">  </span><br><span class="line"># APPLICATION SETTINGS (SpringApplication)  </span><br><span class="line">spring.main.sources=  </span><br><span class="line">spring.main.web-environment= # detect by default  </span><br><span class="line">spring.main.show-banner=true  </span><br><span class="line">spring.main....= # see class for all properties  </span><br><span class="line">  </span><br><span class="line"># LOGGING  </span><br><span class="line">logging.path=/var/logs  </span><br><span class="line">logging.file=myapp.log  </span><br><span class="line">logging.config=  </span><br><span class="line">  </span><br><span class="line"># IDENTITY (ContextIdApplicationContextInitializer)  </span><br><span class="line">spring.application.name=  </span><br><span class="line">spring.application.index=  </span><br><span class="line">  </span><br><span class="line"># EMBEDDED SERVER CONFIGURATION (ServerProperties)  </span><br><span class="line">server.port=8080  </span><br><span class="line">server.address= # bind to a specific NIC  </span><br><span class="line">server.session-timeout= # session timeout in seconds  </span><br><span class="line">server.context-path= # the context path, defaults to &apos;/&apos;  </span><br><span class="line">server.servlet-path= # the servlet path, defaults to &apos;/&apos;  </span><br><span class="line">server.tomcat.access-log-pattern= # log pattern of the access log  </span><br><span class="line">server.tomcat.access-log-enabled=false # is access logging enabled  </span><br><span class="line">server.tomcat.protocol-header=x-forwarded-proto # ssl forward headers  </span><br><span class="line">server.tomcat.remote-ip-header=x-forwarded-for  </span><br><span class="line">server.tomcat.basedir=/tmp # base dir (usually not needed, defaults to tmp)  </span><br><span class="line">server.tomcat.background-processor-delay=30; # in seconds  </span><br><span class="line">server.tomcat.max-threads = 0 # number of threads in protocol handler  </span><br><span class="line">server.tomcat.uri-encoding = UTF-8 # character encoding to use for URL decoding  </span><br><span class="line">  </span><br><span class="line"># SPRING MVC (HttpMapperProperties)  </span><br><span class="line">http.mappers.json-pretty-print=false # pretty print JSON  </span><br><span class="line">http.mappers.json-sort-keys=false # sort keys  </span><br><span class="line">spring.mvc.locale= # set fixed locale, e.g. en_UK  </span><br><span class="line">spring.mvc.date-format= # set fixed date format, e.g. dd/MM/yyyy  </span><br><span class="line">spring.mvc.message-codes-resolver-format= # PREFIX_ERROR_CODE / POSTFIX_ERROR_CODE  </span><br><span class="line">spring.view.prefix= # MVC view prefix  </span><br><span class="line">spring.view.suffix= # ... and suffix  </span><br><span class="line">spring.resources.cache-period= # cache timeouts in headers sent to browser  </span><br><span class="line">spring.resources.add-mappings=true # if default mappings should be added  </span><br><span class="line">  </span><br><span class="line"># THYMELEAF (ThymeleafAutoConfiguration)  </span><br><span class="line">spring.thymeleaf.prefix=classpath:/templates/  </span><br><span class="line">spring.thymeleaf.suffix=.html  </span><br><span class="line">spring.thymeleaf.mode=HTML5  </span><br><span class="line">spring.thymeleaf.encoding=UTF-8  </span><br><span class="line">spring.thymeleaf.content-type=text/html # ;charset=&lt;encoding&gt; is added  </span><br><span class="line">spring.thymeleaf.cache=true # set to false for hot refresh  </span><br><span class="line">  </span><br><span class="line"># FREEMARKER (FreeMarkerAutoConfiguration)  </span><br><span class="line">spring.freemarker.allowRequestOverride=false  </span><br><span class="line">spring.freemarker.allowSessionOverride=false  </span><br><span class="line">spring.freemarker.cache=true  </span><br><span class="line">spring.freemarker.checkTemplateLocation=true  </span><br><span class="line">spring.freemarker.contentType=text/html  </span><br><span class="line">spring.freemarker.exposeRequestAttributes=false  </span><br><span class="line">spring.freemarker.exposeSessionAttributes=false  </span><br><span class="line">spring.freemarker.exposeSpringMacroHelpers=false  </span><br><span class="line">spring.freemarker.prefix=  </span><br><span class="line">spring.freemarker.requestContextAttribute=  </span><br><span class="line">spring.freemarker.settings.*=  </span><br><span class="line">spring.freemarker.suffix=.ftl  </span><br><span class="line">spring.freemarker.templateEncoding=UTF-8  </span><br><span class="line">spring.freemarker.templateLoaderPath=classpath:/templates/  </span><br><span class="line">spring.freemarker.viewNames= # whitelist of view names that can be resolved  </span><br><span class="line">  </span><br><span class="line"># GROOVY TEMPLATES (GroovyTemplateAutoConfiguration)  </span><br><span class="line">spring.groovy.template.allowRequestOverride=false  </span><br><span class="line">spring.groovy.template.allowSessionOverride=false  </span><br><span class="line">spring.groovy.template.cache=true  </span><br><span class="line">spring.groovy.template.configuration.*= # See Groovy&apos;s TemplateConfiguration  </span><br><span class="line">spring.groovy.template.contentType=text/html  </span><br><span class="line">spring.groovy.template.prefix=classpath:/templates/  </span><br><span class="line">spring.groovy.template.suffix=.tpl  </span><br><span class="line">spring.groovy.template.templateEncoding=UTF-8  </span><br><span class="line">spring.groovy.template.viewNames= # whitelist of view names that can be resolved  </span><br><span class="line">  </span><br><span class="line"># VELOCITY TEMPLATES (VelocityAutoConfiguration)  </span><br><span class="line">spring.velocity.allowRequestOverride=false  </span><br><span class="line">spring.velocity.allowSessionOverride=false  </span><br><span class="line">spring.velocity.cache=true  </span><br><span class="line">spring.velocity.checkTemplateLocation=true  </span><br><span class="line">spring.velocity.contentType=text/html  </span><br><span class="line">spring.velocity.dateToolAttribute=  </span><br><span class="line">spring.velocity.exposeRequestAttributes=false  </span><br><span class="line">spring.velocity.exposeSessionAttributes=false  </span><br><span class="line">spring.velocity.exposeSpringMacroHelpers=false  </span><br><span class="line">spring.velocity.numberToolAttribute=  </span><br><span class="line">spring.velocity.prefix=  </span><br><span class="line">spring.velocity.properties.*=  </span><br><span class="line">spring.velocity.requestContextAttribute=  </span><br><span class="line">spring.velocity.resourceLoaderPath=classpath:/templates/  </span><br><span class="line">spring.velocity.suffix=.vm  </span><br><span class="line">spring.velocity.templateEncoding=UTF-8  </span><br><span class="line">spring.velocity.viewNames= # whitelist of view names that can be resolved  </span><br><span class="line">  </span><br><span class="line"># INTERNATIONALIZATION (MessageSourceAutoConfiguration)  </span><br><span class="line">spring.messages.basename=messages  </span><br><span class="line">spring.messages.cacheSeconds=-1  </span><br><span class="line">spring.messages.encoding=UTF-8  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"># SECURITY (SecurityProperties)  </span><br><span class="line">security.user.name=user # login username  </span><br><span class="line">security.user.password= # login password  </span><br><span class="line">security.user.role=USER # role assigned to the user  </span><br><span class="line">security.require-ssl=false # advanced settings ...  </span><br><span class="line">security.enable-csrf=false  </span><br><span class="line">security.basic.enabled=true  </span><br><span class="line">security.basic.realm=Spring  </span><br><span class="line">security.basic.path= # /**  </span><br><span class="line">security.headers.xss=false  </span><br><span class="line">security.headers.cache=false  </span><br><span class="line">security.headers.frame=false  </span><br><span class="line">security.headers.contentType=false  </span><br><span class="line">security.headers.hsts=all # none / domain / all  </span><br><span class="line">security.sessions=stateless # always / never / if_required / stateless  </span><br><span class="line">security.ignored=false  </span><br><span class="line">  </span><br><span class="line"># DATASOURCE (DataSourceAutoConfiguration &amp; DataSourceProperties)  </span><br><span class="line">spring.datasource.name= # name of the data source  </span><br><span class="line">spring.datasource.initialize=true # populate using data.sql  </span><br><span class="line">spring.datasource.schema= # a schema (DDL) script resource reference  </span><br><span class="line">spring.datasource.data= # a data (DML) script resource reference  </span><br><span class="line">spring.datasource.platform= # the platform to use in the schema resource (schema-$&#123;platform&#125;.sql)  </span><br><span class="line">spring.datasource.continueOnError=false # continue even if can&apos;t be initialized  </span><br><span class="line">spring.datasource.separator=; # statement separator in SQL initialization scripts  </span><br><span class="line">spring.datasource.driverClassName= # JDBC Settings...  </span><br><span class="line">spring.datasource.url=  </span><br><span class="line">spring.datasource.username=  </span><br><span class="line">spring.datasource.password=  </span><br><span class="line">spring.datasource.max-active=100 # Advanced configuration...  </span><br><span class="line">spring.datasource.max-idle=8  </span><br><span class="line">spring.datasource.min-idle=8  </span><br><span class="line">spring.datasource.initial-size=10  </span><br><span class="line">spring.datasource.validation-query=  </span><br><span class="line">spring.datasource.test-on-borrow=false  </span><br><span class="line">spring.datasource.test-on-return=false  </span><br><span class="line">spring.datasource.test-while-idle=  </span><br><span class="line">spring.datasource.time-between-eviction-runs-millis=  </span><br><span class="line">spring.datasource.min-evictable-idle-time-millis=  </span><br><span class="line">spring.datasource.max-wait-millis=  </span><br><span class="line">  </span><br><span class="line"># MONGODB (MongoProperties)  </span><br><span class="line">spring.data.mongodb.host= # the db host  </span><br><span class="line">spring.data.mongodb.port=27017 # the connection port (defaults to 27107)  </span><br><span class="line">spring.data.mongodb.uri=mongodb://localhost/test # connection URL  </span><br><span class="line">spring.data.mongo.repositories.enabled=true # if spring data repository support is enabled  </span><br><span class="line">  </span><br><span class="line"># JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)  </span><br><span class="line">spring.jpa.properties.*= # properties to set on the JPA connection  </span><br><span class="line">spring.jpa.openInView=true  </span><br><span class="line">spring.jpa.show-sql=true  </span><br><span class="line">spring.jpa.database-platform=  </span><br><span class="line">spring.jpa.database=  </span><br><span class="line">spring.jpa.generate-ddl=false # ignored by Hibernate, might be useful for other vendors  </span><br><span class="line">spring.jpa.hibernate.naming-strategy= # naming classname  </span><br><span class="line">spring.jpa.hibernate.ddl-auto= # defaults to create-drop for embedded dbs  </span><br><span class="line">spring.data.jpa.repositories.enabled=true # if spring data repository support is enabled  </span><br><span class="line">  </span><br><span class="line"># SOLR (SolrProperties&#125;)  </span><br><span class="line">spring.data.solr.host=http://127.0.0.1:8983/solr  </span><br><span class="line">spring.data.solr.zkHost=  </span><br><span class="line">spring.data.solr.repositories.enabled=true # if spring data repository support is enabled  </span><br><span class="line">  </span><br><span class="line"># ELASTICSEARCH (ElasticsearchProperties&#125;)  </span><br><span class="line">spring.data.elasticsearch.cluster-name= # The cluster name (defaults to elasticsearch)  </span><br><span class="line">spring.data.elasticsearch.cluster-nodes= # The address(es) of the server node (comma-separated; if not specified starts a client node)  </span><br><span class="line">spring.data.elasticsearch.local=true # if local mode should be used with client nodes  </span><br><span class="line">spring.data.elasticsearch.repositories.enabled=true # if spring data repository support is enabled  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"># FLYWAY (FlywayProperties)  </span><br><span class="line">flyway.locations=classpath:db/migrations # locations of migrations scripts  </span><br><span class="line">flyway.schemas= # schemas to update  </span><br><span class="line">flyway.initVersion= 1 # version to start migration  </span><br><span class="line">flyway.prefix=V  </span><br><span class="line">flyway.suffix=.sql  </span><br><span class="line">flyway.enabled=true  </span><br><span class="line">flyway.url= # JDBC url if you want Flyway to create its own DataSource  </span><br><span class="line">flyway.user= # JDBC username if you want Flyway to create its own DataSource  </span><br><span class="line">flyway.password= # JDBC password if you want Flyway to create its own DataSource  </span><br><span class="line">  </span><br><span class="line"># LIQUIBASE (LiquibaseProperties)  </span><br><span class="line">liquibase.change-log=classpath:/db/changelog/db.changelog-master.yaml  </span><br><span class="line">liquibase.contexts= # runtime contexts to use  </span><br><span class="line">liquibase.default-schema= # default database schema to use  </span><br><span class="line">liquibase.drop-first=false  </span><br><span class="line">liquibase.enabled=true  </span><br><span class="line">  </span><br><span class="line"># JMX  </span><br><span class="line">spring.jmx.enabled=true # Expose MBeans from Spring  </span><br><span class="line">  </span><br><span class="line"># RABBIT (RabbitProperties)  </span><br><span class="line">spring.rabbitmq.host= # connection host  </span><br><span class="line">spring.rabbitmq.port= # connection port  </span><br><span class="line">spring.rabbitmq.addresses= # connection addresses (e.g. myhost:9999,otherhost:1111)  </span><br><span class="line">spring.rabbitmq.username= # login user  </span><br><span class="line">spring.rabbitmq.password= # login password  </span><br><span class="line">spring.rabbitmq.virtualhost=  </span><br><span class="line">spring.rabbitmq.dynamic=  </span><br><span class="line">  </span><br><span class="line"># REDIS (RedisProperties)  </span><br><span class="line">spring.redis.host=localhost # server host  </span><br><span class="line">spring.redis.password= # server password  </span><br><span class="line">spring.redis.port=6379 # connection port  </span><br><span class="line">spring.redis.pool.max-idle=8 # pool settings ...  </span><br><span class="line">spring.redis.pool.min-idle=0  </span><br><span class="line">spring.redis.pool.max-active=8  </span><br><span class="line">spring.redis.pool.max-wait=-1  </span><br><span class="line">  </span><br><span class="line"># ACTIVEMQ (ActiveMQProperties)  </span><br><span class="line">spring.activemq.broker-url=tcp://localhost:61616 # connection URL  </span><br><span class="line">spring.activemq.user=  </span><br><span class="line">spring.activemq.password=  </span><br><span class="line">spring.activemq.in-memory=true # broker kind to create if no broker-url is specified  </span><br><span class="line">spring.activemq.pooled=false  </span><br><span class="line">  </span><br><span class="line"># HornetQ (HornetQProperties)  </span><br><span class="line">spring.hornetq.mode= # connection mode (native, embedded)  </span><br><span class="line">spring.hornetq.host=localhost # hornetQ host (native mode)  </span><br><span class="line">spring.hornetq.port=5445 # hornetQ port (native mode)  </span><br><span class="line">spring.hornetq.embedded.enabled=true # if the embedded server is enabled (needs hornetq-jms-server.jar)  </span><br><span class="line">spring.hornetq.embedded.serverId= # auto-generated id of the embedded server (integer)  </span><br><span class="line">spring.hornetq.embedded.persistent=false # message persistence  </span><br><span class="line">spring.hornetq.embedded.data-directory= # location of data content (when persistence is enabled)  </span><br><span class="line">spring.hornetq.embedded.queues= # comma separate queues to create on startup  </span><br><span class="line">spring.hornetq.embedded.topics= # comma separate topics to create on startup  </span><br><span class="line">spring.hornetq.embedded.cluster-password= # customer password (randomly generated by default)  </span><br><span class="line">  </span><br><span class="line"># JMS (JmsProperties)  </span><br><span class="line">spring.jms.pub-sub-domain= # false for queue (default), true for topic  </span><br><span class="line">  </span><br><span class="line"># SPRING BATCH (BatchDatabaseInitializer)  </span><br><span class="line">spring.batch.job.names=job1,job2  </span><br><span class="line">spring.batch.job.enabled=true  </span><br><span class="line">spring.batch.initializer.enabled=true  </span><br><span class="line">spring.batch.schema= # batch schema to load  </span><br><span class="line">  </span><br><span class="line"># AOP  </span><br><span class="line">spring.aop.auto=  </span><br><span class="line">spring.aop.proxy-target-class=  </span><br><span class="line">  </span><br><span class="line"># FILE ENCODING (FileEncodingApplicationListener)  </span><br><span class="line">spring.mandatory-file-encoding=false  </span><br><span class="line">  </span><br><span class="line"># SPRING SOCIAL (SocialWebAutoConfiguration)  </span><br><span class="line">spring.social.auto-connection-views=true # Set to true for default connection views or false if you provide your own  </span><br><span class="line">  </span><br><span class="line"># SPRING SOCIAL FACEBOOK (FacebookAutoConfiguration)  </span><br><span class="line">spring.social.facebook.app-id= # your application&apos;s Facebook App ID  </span><br><span class="line">spring.social.facebook.app-secret= # your application&apos;s Facebook App Secret  </span><br><span class="line">  </span><br><span class="line"># SPRING SOCIAL LINKEDIN (LinkedInAutoConfiguration)  </span><br><span class="line">spring.social.linkedin.app-id= # your application&apos;s LinkedIn App ID  </span><br><span class="line">spring.social.linkedin.app-secret= # your application&apos;s LinkedIn App Secret  </span><br><span class="line">  </span><br><span class="line"># SPRING SOCIAL TWITTER (TwitterAutoConfiguration)  </span><br><span class="line">spring.social.twitter.app-id= # your application&apos;s Twitter App ID  </span><br><span class="line">spring.social.twitter.app-secret= # your application&apos;s Twitter App Secret  </span><br><span class="line">  </span><br><span class="line"># SPRING MOBILE SITE PREFERENCE (SitePreferenceAutoConfiguration)  </span><br><span class="line">spring.mobile.sitepreference.enabled=true # enabled by default  </span><br><span class="line">  </span><br><span class="line"># SPRING MOBILE DEVICE VIEWS (DeviceDelegatingViewResolverAutoConfiguration)  </span><br><span class="line">spring.mobile.devicedelegatingviewresolver.enabled=true # disabled by default  </span><br><span class="line">spring.mobile.devicedelegatingviewresolver.normalPrefix=  </span><br><span class="line">spring.mobile.devicedelegatingviewresolver.normalSuffix=  </span><br><span class="line">spring.mobile.devicedelegatingviewresolver.mobilePrefix=mobile/  </span><br><span class="line">spring.mobile.devicedelegatingviewresolver.mobileSuffix=  </span><br><span class="line">spring.mobile.devicedelegatingviewresolver.tabletPrefix=tablet/  </span><br><span class="line">spring.mobile.devicedelegatingviewresolver.tabletSuffix=  </span><br><span class="line">  </span><br><span class="line"># ----------------------------------------  </span><br><span class="line"># ACTUATOR PROPERTIES  </span><br><span class="line"># ----------------------------------------  </span><br><span class="line">  </span><br><span class="line"># MANAGEMENT HTTP SERVER (ManagementServerProperties)  </span><br><span class="line">management.port= # defaults to &apos;server.port&apos;  </span><br><span class="line">management.address= # bind to a specific NIC  </span><br><span class="line">management.contextPath= # default to &apos;/&apos;  </span><br><span class="line">  </span><br><span class="line"># ENDPOINTS (AbstractEndpoint subclasses)  </span><br><span class="line">endpoints.autoconfig.id=autoconfig  </span><br><span class="line">endpoints.autoconfig.sensitive=true  </span><br><span class="line">endpoints.autoconfig.enabled=true  </span><br><span class="line">endpoints.beans.id=beans  </span><br><span class="line">endpoints.beans.sensitive=true  </span><br><span class="line">endpoints.beans.enabled=true  </span><br><span class="line">endpoints.configprops.id=configprops  </span><br><span class="line">endpoints.configprops.sensitive=true  </span><br><span class="line">endpoints.configprops.enabled=true  </span><br><span class="line">endpoints.configprops.keys-to-sanitize=password,secret  </span><br><span class="line">endpoints.dump.id=dump  </span><br><span class="line">endpoints.dump.sensitive=true  </span><br><span class="line">endpoints.dump.enabled=true  </span><br><span class="line">endpoints.env.id=env  </span><br><span class="line">endpoints.env.sensitive=true  </span><br><span class="line">endpoints.env.enabled=true  </span><br><span class="line">endpoints.health.id=health  </span><br><span class="line">endpoints.health.sensitive=false  </span><br><span class="line">endpoints.health.enabled=true  </span><br><span class="line">endpoints.info.id=info  </span><br><span class="line">endpoints.info.sensitive=false  </span><br><span class="line">endpoints.info.enabled=true  </span><br><span class="line">endpoints.metrics.id=metrics  </span><br><span class="line">endpoints.metrics.sensitive=true  </span><br><span class="line">endpoints.metrics.enabled=true  </span><br><span class="line">endpoints.shutdown.id=shutdown  </span><br><span class="line">endpoints.shutdown.sensitive=true  </span><br><span class="line">endpoints.shutdown.enabled=false  </span><br><span class="line">endpoints.trace.id=trace  </span><br><span class="line">endpoints.trace.sensitive=true  </span><br><span class="line">endpoints.trace.enabled=true  </span><br><span class="line">  </span><br><span class="line"># MVC ONLY ENDPOINTS  </span><br><span class="line">endpoints.jolokia.path=jolokia  </span><br><span class="line">endpoints.jolokia.sensitive=true  </span><br><span class="line">endpoints.jolokia.enabled=true # when using Jolokia  </span><br><span class="line">endpoints.error.path=/error  </span><br><span class="line">  </span><br><span class="line"># JMX ENDPOINT (EndpointMBeanExportProperties)  </span><br><span class="line">endpoints.jmx.enabled=true  </span><br><span class="line">endpoints.jmx.domain= # the JMX domain, defaults to &apos;org.springboot&apos;  </span><br><span class="line">endpoints.jmx.unique-names=false  </span><br><span class="line">endpoints.jmx.enabled=true  </span><br><span class="line">endpoints.jmx.staticNames=  </span><br><span class="line">  </span><br><span class="line"># JOLOKIA (JolokiaProperties)  </span><br><span class="line">jolokia.config.*= # See Jolokia manual  </span><br><span class="line">  </span><br><span class="line"># REMOTE SHELL  </span><br><span class="line">shell.auth=simple # jaas, key, simple, spring  </span><br><span class="line">shell.command-refresh-interval=-1  </span><br><span class="line">shell.command-path-pattern= # classpath*:/commands/**, classpath*:/crash/commands/**  </span><br><span class="line">shell.config-path-patterns= # classpath*:/crash/*  </span><br><span class="line">shell.disabled-plugins=false # don&apos;t expose plugins  </span><br><span class="line">shell.ssh.enabled= # ssh settings ...  </span><br><span class="line">shell.ssh.keyPath=  </span><br><span class="line">shell.ssh.port=  </span><br><span class="line">shell.telnet.enabled= # telnet settings ...  </span><br><span class="line">shell.telnet.port=  </span><br><span class="line">shell.auth.jaas.domain= # authentication settings ...  </span><br><span class="line">shell.auth.key.path=  </span><br><span class="line">shell.auth.simple.user.name=  </span><br><span class="line">shell.auth.simple.user.password=  </span><br><span class="line">shell.auth.spring.roles=  </span><br><span class="line">  </span><br><span class="line"># GIT INFO  </span><br><span class="line">spring.git.properties= # resource ref to generated git info properties file</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="spring boot" scheme="http://yoursite.com/categories/spring-boot/"/>
    
    
      <category term="后端" scheme="http://yoursite.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>IDEA中使用mybatis generator逆向工程生成代码</title>
    <link href="http://yoursite.com/2018/01/10/IDEA%E4%B8%AD%E4%BD%BF%E7%94%A8mybatis%20generator%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81/"/>
    <id>http://yoursite.com/2018/01/10/IDEA中使用mybatis generator逆向工程生成代码/</id>
    <published>2018-01-10T12:13:11.703Z</published>
    <updated>2018-01-10T12:40:57.247Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍下如何在idea中利用Maven工具逆向生成mybatis代码</p><p><strong>1. 在maven中配置pom.xml文件</strong></p><p>在pom.xml的<build></build>中加入如下插件：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--mybatis 逆向工程--&gt;</span><br><span class="line">&lt;plugin&gt;</span><br><span class="line">    &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">    &lt;configuration&gt;</span><br><span class="line">        &lt;verbose&gt;true&lt;/verbose&gt;</span><br><span class="line">        &lt;overwrite&gt;true&lt;/overwrite&gt;</span><br><span class="line">    &lt;/configuration&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure><p>配置好maven插件后，进行下一步。</p><p><strong>2. 添加逆向工程的配置文件</strong></p><p>在resources目录下新建一个generatorConfig.xml文件，然后将如下配置文件拷贝到上面建的文件中。<br>maven的项目配置文件存放位置如下：</p><p><img src="http://p25wdbssm.bkt.clouddn.com/mybatis.png" alt=""></p><p>generatorConfig.xml文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE generatorConfiguration</span><br><span class="line">        PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span><br><span class="line">        &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--classPathEntry:数据库的JDBC驱动 --&gt;</span><br><span class="line">    &lt;classPathEntry location=&quot;F:\.m2\repository\mysql\mysql-connector-java\5.1.34\mysql-connector-java-5.1.34.jar&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--&amp;lt;!&amp;ndash;导入属性配置&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">    &lt;!--&lt;properties resource=&quot;jdbc.properties&quot;&gt;&lt;/properties&gt;--&gt;</span><br><span class="line"></span><br><span class="line">    &lt;context id=&quot;default&quot; targetRuntime=&quot;MyBatis3&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- optional，旨在创建class时，对注释进行控制 --&gt;</span><br><span class="line">        &lt;commentGenerator&gt;</span><br><span class="line">            &lt;property name=&quot;suppressDate&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">            &lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/commentGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--jdbc的数据库连接 --&gt;</span><br><span class="line">        &lt;jdbcConnection</span><br><span class="line">                driverClass=&quot;com.mysql.jdbc.Driver&quot;</span><br><span class="line">                connectionURL=&quot;jdbc:mysql://localhost:3306/cms&quot;</span><br><span class="line">                userId=&quot;root&quot;</span><br><span class="line">                password=&quot;sky&quot;&gt;</span><br><span class="line">        &lt;/jdbcConnection&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制--&gt;</span><br><span class="line">        &lt;javaTypeResolver&gt;</span><br><span class="line">            &lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">        &lt;/javaTypeResolver&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类</span><br><span class="line">            targetPackage     指定生成的model生成所在的包名</span><br><span class="line">            targetProject     指定在该项目下所在的路径</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;javaModelGenerator targetPackage=&quot;com.spring.cms.model.vo&quot;</span><br><span class="line">                            targetProject=&quot;src/main/java&quot;&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 是否允许子包，即targetPackage.schemaName.tableName --&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">            &lt;!-- 是否对model添加 构造函数 --&gt;</span><br><span class="line">            &lt;property name=&quot;constructorBased&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">            &lt;!-- 是否对类CHAR类型的列的数据进行trim操作 --&gt;</span><br><span class="line">            &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">            &lt;!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 --&gt;</span><br><span class="line">            &lt;property name=&quot;immutable&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">        &lt;/javaModelGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 --&gt;</span><br><span class="line">        &lt;sqlMapGenerator targetPackage=&quot;mapper&quot;</span><br><span class="line">                         targetProject=&quot;src/main/resources&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">        &lt;/sqlMapGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码</span><br><span class="line">                type=&quot;ANNOTATEDMAPPER&quot;,生成Java Model 和基于注解的Mapper对象</span><br><span class="line">                type=&quot;MIXEDMAPPER&quot;,生成基于注解的Java Model 和相应的Mapper对象</span><br><span class="line">                type=&quot;XMLMAPPER&quot;,生成SQLMap XML文件和独立的Mapper接口</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;javaClientGenerator targetPackage=&quot;com.spring.cms.dao&quot;</span><br><span class="line">                             targetProject=&quot;src/main/java&quot; type=&quot;XMLMAPPER&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/javaClientGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 必须的（1...N） --&gt;</span><br><span class="line">        &lt;!-- pojo 实体生成器 --&gt;</span><br><span class="line">        &lt;!-- tableName:用于自动生成代码的数据库表；domainObjectName:对应于数据库表的javaBean类名 --&gt;</span><br><span class="line">        &lt;!-- schema即为数据库名 可不写 --&gt;</span><br><span class="line">        &lt;table tableName=&quot;cc_user&quot; domainObjectName=&quot;User&quot;</span><br><span class="line">               enableCountByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot;</span><br><span class="line">               enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot;</span><br><span class="line">               selectByExampleQueryId=&quot;false&quot;&gt;</span><br><span class="line">            &lt;!-- 忽略字段 可选的（0 or 1） --&gt;</span><br><span class="line">            &lt;!-- &lt;ignoreColumn column=&quot;is_use&quot; /&gt; --&gt;</span><br><span class="line">            &lt;!--//无论字段是什么类型，生成的类属性都是varchar。 可选的（0 or 1） 测试无效 --&gt;</span><br><span class="line">            &lt;!-- &lt;columnOverride column=&quot;city_code&quot; jdbcType=&quot;VARCHAR&quot; /&gt; --&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 必须的（1...N） --&gt;</span><br><span class="line">        &lt;!-- pojo 实体生成器 --&gt;</span><br><span class="line">        &lt;!-- tableName:用于自动生成代码的数据库表；domainObjectName:对应于数据库表的javaBean类名 --&gt;</span><br><span class="line">        &lt;!-- schema即为数据库名 可不写 --&gt;</span><br><span class="line">        &lt;table tableName=&quot;cc_user_role&quot; domainObjectName=&quot;UserRole&quot;</span><br><span class="line">               enableCountByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot;</span><br><span class="line">               enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot;</span><br><span class="line">               selectByExampleQueryId=&quot;false&quot;&gt;</span><br><span class="line">            &lt;!-- 忽略字段 可选的（0 or 1） --&gt;</span><br><span class="line">            &lt;!-- &lt;ignoreColumn column=&quot;is_use&quot; /&gt; --&gt;</span><br><span class="line">            &lt;!--//无论字段是什么类型，生成的类属性都是varchar。 可选的（0 or 1） 测试无效 --&gt;</span><br><span class="line">            &lt;!-- &lt;columnOverride column=&quot;city_code&quot; jdbcType=&quot;VARCHAR&quot; /&gt; --&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 必须的（1...N） --&gt;</span><br><span class="line">        &lt;!-- pojo 实体生成器 --&gt;</span><br><span class="line">        &lt;!-- tableName:用于自动生成代码的数据库表；domainObjectName:对应于数据库表的javaBean类名 --&gt;</span><br><span class="line">        &lt;!-- schema即为数据库名 可不写 --&gt;</span><br><span class="line">        &lt;table tableName=&quot;cc_role&quot; domainObjectName=&quot;Role&quot;</span><br><span class="line">               enableCountByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot;</span><br><span class="line">               enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot;</span><br><span class="line">               selectByExampleQueryId=&quot;false&quot;&gt;</span><br><span class="line">            &lt;!-- 忽略字段 可选的（0 or 1） --&gt;</span><br><span class="line">            &lt;!-- &lt;ignoreColumn column=&quot;is_use&quot; /&gt; --&gt;</span><br><span class="line">            &lt;!--//无论字段是什么类型，生成的类属性都是varchar。 可选的（0 or 1） 测试无效 --&gt;</span><br><span class="line">            &lt;!-- &lt;columnOverride column=&quot;city_code&quot; jdbcType=&quot;VARCHAR&quot; /&gt; --&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 必须的（1...N） --&gt;</span><br><span class="line">        &lt;!-- pojo 实体生成器 --&gt;</span><br><span class="line">        &lt;!-- tableName:用于自动生成代码的数据库表；domainObjectName:对应于数据库表的javaBean类名 --&gt;</span><br><span class="line">        &lt;!-- schema即为数据库名 可不写 --&gt;</span><br><span class="line">        &lt;table tableName=&quot;cc_role_resource&quot; domainObjectName=&quot;RoleResource&quot;</span><br><span class="line">               enableCountByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot;</span><br><span class="line">               enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot;</span><br><span class="line">               selectByExampleQueryId=&quot;false&quot;&gt;</span><br><span class="line">            &lt;!-- 忽略字段 可选的（0 or 1） --&gt;</span><br><span class="line">            &lt;!-- &lt;ignoreColumn column=&quot;is_use&quot; /&gt; --&gt;</span><br><span class="line">            &lt;!--//无论字段是什么类型，生成的类属性都是varchar。 可选的（0 or 1） 测试无效 --&gt;</span><br><span class="line">            &lt;!-- &lt;columnOverride column=&quot;city_code&quot; jdbcType=&quot;VARCHAR&quot; /&gt; --&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 必须的（1...N） --&gt;</span><br><span class="line">        &lt;!-- pojo 实体生成器 --&gt;</span><br><span class="line">        &lt;!-- tableName:用于自动生成代码的数据库表；domainObjectName:对应于数据库表的javaBean类名 --&gt;</span><br><span class="line">        &lt;!-- schema即为数据库名 可不写 --&gt;</span><br><span class="line">        &lt;table tableName=&quot;cc_resource&quot; domainObjectName=&quot;Resource&quot;</span><br><span class="line">               enableCountByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot;</span><br><span class="line">               enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot;</span><br><span class="line">               selectByExampleQueryId=&quot;false&quot;&gt;</span><br><span class="line">            &lt;!-- 忽略字段 可选的（0 or 1） --&gt;</span><br><span class="line">            &lt;!-- &lt;ignoreColumn column=&quot;is_use&quot; /&gt; --&gt;</span><br><span class="line">            &lt;!--//无论字段是什么类型，生成的类属性都是varchar。 可选的（0 or 1） 测试无效 --&gt;</span><br><span class="line">            &lt;!-- &lt;columnOverride column=&quot;city_code&quot; jdbcType=&quot;VARCHAR&quot; /&gt; --&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/context&gt;</span><br><span class="line">&lt;/generatorConfiguration&gt;</span><br></pre></td></tr></table></figure><p>jdbc.properties配置文件的代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">driverClassName=com.mysql.jdbc.Driver</span><br><span class="line">validationQuery=SELECT 1</span><br><span class="line">jdbc_url=jdbc:mysql://localhost:3306/contentmanagersystem_db?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull</span><br><span class="line">jdbc_username=root</span><br><span class="line">jdbc_password=sky</span><br><span class="line">jdbc.mysql-master.initialSize=5</span><br><span class="line">jdbc.mysql-master.maxActive=5</span><br><span class="line">jdbc.mysql-master.maxIdle=5</span><br><span class="line">jdbc.mysql-master.minIdle=1</span><br><span class="line">jdbc.mysql-master.maxWait=6000</span><br></pre></td></tr></table></figure><p><strong>3. 在IDEA中利用插件生成代码</strong></p><p>选择IDEA右上角下拉框中的Edit Configurations,然后进入到配置页面，选择做上角的 + 号，如图：</p><p><img src="http://p25wdbssm.bkt.clouddn.com/mybatis2.png" alt=""></p><p>选择maven，然后在Commond line栏填上如图命令</p><p><img src="http://p25wdbssm.bkt.clouddn.com/mabatis3.png" alt=""></p><p>点击应用。最后点击启动按钮，即可自动生成代码。</p><p><img src="http://p25wdbssm.bkt.clouddn.com/mybatis4.png" alt=""></p><p>生成成功！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍下如何在idea中利用Maven工具逆向生成mybatis代码&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 在maven中配置pom.xml文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在pom.xml的&lt;build&gt;&lt;/build&gt;中加入如下插件：&lt;/p&gt;
    
    </summary>
    
      <category term="mybatis" scheme="http://yoursite.com/categories/mybatis/"/>
    
    
      <category term="后端" scheme="http://yoursite.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>ArrryList和LinkedList的区别</title>
    <link href="http://yoursite.com/2018/01/06/ArrayList%E5%92%8CLinkedList%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://yoursite.com/2018/01/06/ArrayList和LinkedList的区别/</id>
    <published>2018-01-06T12:01:34.000Z</published>
    <updated>2018-01-10T12:52:42.252Z</updated>
    
    <content type="html"><![CDATA[<h4 id="相同点："><a href="#相同点：" class="headerlink" title="相同点："></a>相同点：</h4><p>ArrayList和LinkedList类都位于java.util包中，均为可收缩数组，即可以动态的改变数组的长度。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;相同点：&quot;&gt;&lt;a href=&quot;#相同点：&quot; class=&quot;headerlink&quot; title=&quot;相同点：&quot;&gt;&lt;/a&gt;相同点：&lt;/h4&gt;&lt;p&gt;ArrayList和LinkedList类都位于java.util包中，均为可收缩数组，即可以动态的改变数组的长度。&lt;/p&gt;
      
    
    </summary>
    
      <category term="容器" scheme="http://yoursite.com/categories/%E5%AE%B9%E5%99%A8/"/>
    
    
      <category term="容器" scheme="http://yoursite.com/tags/%E5%AE%B9%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>容器主要类型的区分</title>
    <link href="http://yoursite.com/2018/01/03/%E5%AE%B9%E5%99%A8%E4%B8%BB%E8%A6%81%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%8C%BA%E5%88%86/"/>
    <id>http://yoursite.com/2018/01/03/容器主要类型的区分/</id>
    <published>2018-01-03T12:13:06.000Z</published>
    <updated>2018-01-08T13:00:28.906Z</updated>
    
    <content type="html"><![CDATA[<h3 id="容器的基本概念"><a href="#容器的基本概念" class="headerlink" title="容器的基本概念"></a>容器的基本概念</h3><p>Java 容器类类库的概念是“保存对象”，通常将其划分为两个不同的概念：</p><ol><li>Collection: 一个独立元素的序列，这些元素都服从一条或多条规则。List 必须按照插入的顺序保存元素，而Set不能有重复元素。Queue按照排队规则来确定能够对象产生的顺序（通常与它们被插入的顺序相同）。<a id="more"></a></li><li>Map: 一组成对的“键值对”对象，允许你使用键来查找值。映射表允许我们使用另一个对象来查找某个对象，它也被成为“关联数组”，因为它将某些对象与另外一些对象关联在一起；或者被称为“字典”，因为你可以使用键对象来查找值对象。Map是强大的编程工具。</li></ol><h3 id="容器中的几种不同的存贮方式"><a href="#容器中的几种不同的存贮方式" class="headerlink" title="容器中的几种不同的存贮方式"></a>容器中的几种不同的存贮方式</h3><p>先来看一个小例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">public class PrintingContainers &#123;</span><br><span class="line">    public static Collection fill(Collection&lt;String&gt; collection)&#123;</span><br><span class="line">        collection.add(&quot;Snow&quot;);</span><br><span class="line">        collection.add(&quot;White&quot;);</span><br><span class="line">        collection.add(&quot;Star&quot;);</span><br><span class="line">        collection.add(&quot;Wars&quot;);</span><br><span class="line">        return collection;</span><br><span class="line">    &#125;</span><br><span class="line">    public static Map fill(Map&lt;String,String&gt; map)&#123;</span><br><span class="line">        map.put(&quot;Snow&quot;,&quot;Tom&quot;);</span><br><span class="line">        map.put(&quot;White&quot;,&quot;Jerry&quot;);</span><br><span class="line">        map.put(&quot;Star&quot;,&quot;Jack&quot;);</span><br><span class="line">        map.put(&quot;Wars&quot;,&quot;Angle&quot;);</span><br><span class="line">        return map;</span><br><span class="line">    &#125;</span><br><span class="line">    public static void main(String[] args)&#123;</span><br><span class="line">        System.out.println(fill(new ArrayList&lt;String&gt;()));</span><br><span class="line">        System.out.println(fill(new LinkedList&lt;String&gt;()));</span><br><span class="line">        System.out.println(fill(new HashSet&lt;String&gt;()));</span><br><span class="line">        System.out.println(fill(new LinkedHashSet&lt;String&gt;()));</span><br><span class="line">        System.out.println(fill(new TreeSet&lt;String&gt;()));</span><br><span class="line">        System.out.println(fill(new HashMap&lt;String,String&gt;()));</span><br><span class="line">        System.out.println(fill(new TreeMap&lt;String,String&gt;()));</span><br><span class="line">        System.out.println(fill(new LinkedHashMap&lt;String,String&gt;()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码运行的结果为：</p><p><img src="http://p25wdbssm.bkt.clouddn.com/blog2.png" alt=""></p><p>以上代码展示了Java容器类库中的两种主要类型，它们的区别在于容器中每个“槽”保存的元素的个数。Collection在每个“槽”中只能存贮一个元素。<br>此类容器包括：List，它已特定的顺序保存一组元素；Set，元素之间不能重复；Queue，只允许在容器的一端插入对象，并从另外一端移除对象。Map在每个槽中存贮了两个对象，即一个键值对。</p><p>上面的代码中首先利用fill()方法给所有类型的Collection容器添加元素add()方法。fill()方法可以作用于所有类型的Collection。</p><p>ArrayList和LinkedList都是List类型，两者都属于可伸缩数组，可以动态的改变数组的长度。从输出的结果可以看出，它们都是按照被插入的顺序来保存元素。两者的不同之处不仅在于执行某些类型的操作时的性能，而且LinkedList包含的操作也多余ArrayList。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;容器的基本概念&quot;&gt;&lt;a href=&quot;#容器的基本概念&quot; class=&quot;headerlink&quot; title=&quot;容器的基本概念&quot;&gt;&lt;/a&gt;容器的基本概念&lt;/h3&gt;&lt;p&gt;Java 容器类类库的概念是“保存对象”，通常将其划分为两个不同的概念：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Collection: 一个独立元素的序列，这些元素都服从一条或多条规则。List 必须按照插入的顺序保存元素，而Set不能有重复元素。Queue按照排队规则来确定能够对象产生的顺序（通常与它们被插入的顺序相同）。
    
    </summary>
    
      <category term="容器" scheme="http://yoursite.com/categories/%E5%AE%B9%E5%99%A8/"/>
    
    
      <category term="后端" scheme="http://yoursite.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>多线程的几种实现方式</title>
    <link href="http://yoursite.com/2018/01/02/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/"/>
    <id>http://yoursite.com/2018/01/02/多线程的几种实现方式/</id>
    <published>2018-01-02T13:22:11.000Z</published>
    <updated>2018-01-07T12:05:39.565Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是线程？"><a href="#什么是线程？" class="headerlink" title="什么是线程？"></a>什么是线程？</h3><blockquote><p>线程是指程序在执行过程中，能够执行程序程序代码的一个执行单元。在Java语言中，线程有四种状态：运行、就绪、挂起和结束。</p></blockquote><a id="more"></a><h3 id="为什么要使用多线程"><a href="#为什么要使用多线程" class="headerlink" title="为什么要使用多线程"></a>为什么要使用多线程</h3><ul><li>使用多哦线程可以减少程序的相应时间。</li><li>多CPU或多核计算机本身就具有执行多线程的能力。</li><li>与进程相比，线程的创建和切换开销更小。</li><li>使用多线程能简化程序的结构，使程序便于维护和理解。一个非常复杂的进程可以分成多个线程来执行。</li></ul><h3 id="基本的线程机制"><a href="#基本的线程机制" class="headerlink" title="基本的线程机制"></a>基本的线程机制</h3><p>在使用线程时，CPU将轮流给每个任务分配其占用时间。每个任务都觉得自己在一直占用着CPU,但事实上CPU时间是划分成片段分配给所有的任务。线程可以使你从这个层次抽身出来。<br><em>注意：当系统使用时间切片机制时，CPU轮流给每个任务分配时间，例如Windows（线程优先级和时间片轮转调度）操作系统。但有些操作系统采用FIFO模型，除非有高优先级的线程被唤醒，否则当前线程将一直运行，直至阻塞或终止。</em></p><h3 id="如何实现Java多线程"><a href="#如何实现Java多线程" class="headerlink" title="如何实现Java多线程"></a>如何实现Java多线程</h3><h4 id="继承Thread类，重写run-方法"><a href="#继承Thread类，重写run-方法" class="headerlink" title="继承Thread类，重写run()方法"></a>继承Thread类，重写run()方法</h4><p>Thread 本质上也是实现了Runnable接口的一个实例，它代表一个线程的实例，并且，<br>启动线程的唯一方法就是通过Thread类的start()方法。start()方法是一个native(本地)方法，它将启动一个新线程，并执行一个run()方法(Thread中提供的run()方法是一个空方法)。<br>这种方式通过自定义直接继承Thread，并重写run()方法，就可以启动新线程并执行自己定义的run()方法。<br><strong>调用start()方法后并不是立即执行多线程代码，而是使得该线程变成可运行态，什么时候运行多线程是由CPU调度决定的</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class MyThread extends Thread&#123;</span><br><span class="line">     public void run()&#123;</span><br><span class="line">         System.out.println(&quot;Thread body&quot;);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> public class Test&#123;</span><br><span class="line">     public static void main(String[] args)&#123;</span><br><span class="line">         MyThread thread=new MyThread();</span><br><span class="line">         thread.run();</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="实现Runnable接口，并实现该接口的run-方法"><a href="#实现Runnable接口，并实现该接口的run-方法" class="headerlink" title="实现Runnable接口，并实现该接口的run()方法"></a>实现Runnable接口，并实现该接口的run()方法</h4><p><strong>主要步骤：</strong><br>1） 自定义类并实现Runnable接口，并实现run()方法。<br>2） 创建Thread对象，用实现Runnable接口的对象作为参数实例化该Thread对象。<br>3） 调用Thread的start()方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">class MyThread implements Runnable&#123;</span><br><span class="line">    public void run()&#123;</span><br><span class="line">        System.out.println(&quot;Thread body&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">public class Test&#123;</span><br><span class="line">    public static void main(String[] args)&#123;</span><br><span class="line">        MyThread thread=new MyThread();</span><br><span class="line">        Thread t=new Thread(thread);</span><br><span class="line">        t.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 以上两种是实现多线程最常用的方法。<br> 其实不管是通过继承Thread类还是通过使用Runnable接口来实现多线程的方法，最终还是通过Thread的对象的API来控制线程的。</p><h4 id="实现Callable接口，重写call-方法"><a href="#实现Callable接口，重写call-方法" class="headerlink" title="实现Callable接口，重写call()方法"></a>实现Callable接口，重写call()方法</h4><p>Callable接口实际上是属于Executor框架的功能类，Callable接口与Runnable接口的功能类类似，但提供了比Runnable更强大的功能，主要表现在以下三点：<br><strong>1）Callable可以在任务结束后提供一个返回值，Runnable无法提供这个功能。</strong><br><strong>2）Callable中的call()方法可以抛出异常，而Runnable的run()方法无法抛出异常。</strong><br><strong>3）运行Callable可以拿到一个Future对象，Future对象表示异步计算的结果，可以使用Future来监视目标线程调用call()方法的情况，当调用Future的get()方法以获取结果时，当前线程就会阻塞，直到call()方法结束返回结果。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public class CallableAndFuture&#123;</span><br><span class="line">    //创建线程类</span><br><span class="line">    public static class CallableTest implements Callable&lt;String&gt;&#123;</span><br><span class="line">        @Override</span><br><span class="line">        public String call() throws Exception &#123;</span><br><span class="line">            return &quot;欢迎来到我的博客！&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args)&#123;</span><br><span class="line">        ExecutorService threadPool= Executors.newSingleThreadExecutor();</span><br><span class="line">        //启动线程</span><br><span class="line">        Future&lt;String&gt; future=threadPool.submit(new CallableTest());</span><br><span class="line">        try &#123;</span><br><span class="line">            System.out.println(&quot;waiting thread to finish&quot;);</span><br><span class="line">            //等待线程结束，并获取返回结果</span><br><span class="line">            System.out.println(future.get());</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述程序的输出结果为：<br><img src="http://p25wdbssm.bkt.clouddn.com/blog.png" alt=""></p><p>以上3中方式中，前两种方式线程执行完后都没有返回值，只有最后一种带有返回值的，但是当需要使用多线程时，一般最好是使用实现Runnable接口的方式。<br>因为Thread类定义的多中方法可以被派生类使用或者重写。但是只有run()方法是必须被重写的，在run()方法中实现了这个线程的主要功能。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是线程？&quot;&gt;&lt;a href=&quot;#什么是线程？&quot; class=&quot;headerlink&quot; title=&quot;什么是线程？&quot;&gt;&lt;/a&gt;什么是线程？&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;线程是指程序在执行过程中，能够执行程序程序代码的一个执行单元。在Java语言中，线程有四种状态：运行、就绪、挂起和结束。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="线程" scheme="http://yoursite.com/categories/%E7%BA%BF%E7%A8%8B/"/>
    
    
      <category term="后端" scheme="http://yoursite.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Git总结</title>
    <link href="http://yoursite.com/2018/01/01/git/"/>
    <id>http://yoursite.com/2018/01/01/git/</id>
    <published>2018-01-01T11:31:24.000Z</published>
    <updated>2018-01-08T11:35:21.159Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git-简介"><a href="#git-简介" class="headerlink" title="git 简介"></a>git 简介</h2><p><a href="https://baike.baidu.com/item/GIT/12647237?fr=aladdin" target="_blank" rel="noopener">git</a> 是一款分布式的版本控制系统，其核心是分支，分支的意义在于可以将项目代码按照功能和模块拆分为不同的分支。<br>在 git 中，工作目录下面的所有文件都不外乎两种状态： <strong>已跟踪</strong>和<strong>未跟踪</strong>。</p><a id="more"></a><p>已跟踪文件是指已经被纳入git中，在版本控制器中有它们的记录，但是当我们对文件进行修改之后，文件变得和git中的不一样，那么它就属于未跟踪文件。初次克隆某个仓库时，所有文件都属于已跟踪文件。</p><h2 id="git-常用指令"><a href="#git-常用指令" class="headerlink" title="git 常用指令"></a>git 常用指令</h2><h3 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a><font color="#ff0000">git pull</font></h3><p>作用</p><blockquote><p>将远程代码仓库里的代码下载下来并自动整合到当前工作分支</p></blockquote><p>用法： <strong>git pull origin master</strong></p><p>将origin这个版本库中的代码更新到本地的master主支，类似于SVN的<font color="#99ff00">update</font></p><h3 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a><font color="#ff0000">git add</font></h3><p>作用</p><blockquote><p>是将当前更改或者新增的文件加入到Git的索引中，加入到Git的索引中就表示记入了版本历史中，这也是提交之前所需要执行的一步</p></blockquote><p>用法： <strong>git add app/model/user.java</strong></p><p>增加app/model/user.java文件到Git的索引中,该功能类似于SVN的<font color="#99ff00">add</font></p><h3 id="git-rm"><a href="#git-rm" class="headerlink" title="git rm"></a><font color="#ff0000">git rm</font></h3><p>作用</p><blockquote><p>从当前的工作空间中和索引中删除文件</p></blockquote><p>用法： <strong>git rm app/model/user.java</strong></p><p>删除工作空间中或者索引中的app/model/user.java文件，该功能类似于SVN的<font color="#99ff00">rm、del</font></p><h3 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a><font color="#ff0000">git commit</font></h3><p>作用</p><blockquote><p>将所有添加到索引库的文件添加到本地仓库<br>文件一旦commit之后，就会在git中形成一个历史版本，以后无论怎么变都能够找到此次提交的记录。</p></blockquote><p>用法： <strong>git commit -m story #3, add user model</strong> </p><p>提交的时候必须用-m来输入一条提交信息，该功能类似于SVN中的<font color="#99ff00">commit</font></p><h3 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a><font color="#ff0000">git push</font></h3><p>作用</p><blockquote><p>将本地仓库中的修改推送到远程仓库</p></blockquote><p>用法：<strong>git push origin</strong></p><p>将本地的代码推送到名为origin的远程版本库中</p><h3 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a><font color="#ff0000">git log</font></h3><p>作用</p><blockquote><p>查看git的历史日志</p></blockquote><p>该功能类似于SVN的<font color="#99ff00">log</font></p><h3 id="git-revert"><a href="#git-revert" class="headerlink" title="git revert"></a><font color="#ff0000">git revert</font></h3><p>作用</p><blockquote><p>还原一个版本的修改，必须提供一个具体的Git版本号，Git的版本号都是生成的一个哈希值</p></blockquote><p>用法：<strong>git revert bbaf6fb5060b4875b18ff9ff637ce118256d6f20</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;git-简介&quot;&gt;&lt;a href=&quot;#git-简介&quot; class=&quot;headerlink&quot; title=&quot;git 简介&quot;&gt;&lt;/a&gt;git 简介&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://baike.baidu.com/item/GIT/12647237?fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;git&lt;/a&gt; 是一款分布式的版本控制系统，其核心是分支，分支的意义在于可以将项目代码按照功能和模块拆分为不同的分支。&lt;br&gt;在 git 中，工作目录下面的所有文件都不外乎两种状态： &lt;strong&gt;已跟踪&lt;/strong&gt;和&lt;strong&gt;未跟踪&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="环境" scheme="http://yoursite.com/categories/%E7%8E%AF%E5%A2%83/"/>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/12/30/hello-world/"/>
    <id>http://yoursite.com/2017/12/30/hello-world/</id>
    <published>2017-12-30T09:51:33.000Z</published>
    <updated>2018-01-07T12:16:02.397Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
